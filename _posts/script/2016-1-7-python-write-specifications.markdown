---
layout: article
title:  "一个简单的python编写规范"
date:   2016-01-07 09:20:00 +0800
categories: script
---

为Python代码编写，指定了一些规范，仅供参考：

**特点：**    

    1.代码的编写保持一致性，
    2.提高代码的可读性和可维护性，
    3.在团队开发一个项目的情况下，程序员之间可代码共享，
    4.易于代码的回顾，

这只是我做的一个小总结，大家参考以下就行，如果真的找规范，可以参照
Python PEP 8 Python PEP8

----------

# 下面介绍一下： #

### 1.缩进 ###

每行缩进用4个空格，绝不要混合使用tab和空格;

### 2.空行 ###

用两行空行分割顶层函数和类的定义；

类内方法的定义用单个空行分割；

在函数中使用空行时，用于表示一个逻辑段落（logical sections);

### 3.空格 ###

始终在这些二元运算符两边放置一个空格：

assignment (=), augmented assignment (+=, -= etc.), comparisons (==, <, >, !=, <>, <=,>=,in, not in, is, is not), Booleans      (and, or, not)

在数学运算符两边使用空格；

比如：`i = i + 1`

不要在用于指定关键字参数（keyword argument)或默认参数值的'='号周围使用 空格：

比如：`def complex(real, imag=0.0): pass`

### 4.导入 ###

imports应该按照如下顺序成组安放：

	1.标准库的导入
	2.相关的第三方包的导入
	3.本地应用/库的特定导入

应该在每组导入之间放置一个空行。

### 5.文档字符串 ###

多行文档字符串结尾的"""应该单独成行，并推荐在其前加一空行，
例如:

{% highlight python %}
{% raw %}

""
Return a foobang
Optional plotz says to frobnicate the bizbaz first.
""

{% endraw %}
{% endhighlight %}

对单行的文档字符串，结尾的"""在同一行也可以；

### 6.命名约定 ###

决不要用字符'l'(小写字母el)，'O'(大写字母oh)，或'丨'（大写字母eye)作为单个字符的变量名；

变量名、函数名应该为小写，必要时可用下划线分隔单词以增加可读性；可以在变量后面添加str、list、diet、se傳表示类别的后缀，便于识别变量类型；

常量使用大写，必要时可用下划线分隔单词以增加可读性；

混合大小写（mixedCase)仅被允许用于这种风格已经占优势的上下文（如：threading.py)，以 便保持向后兼容；

类总是使用驼峰格式命名，即所有单词首字母大写其余字母小写；

### 7.异常 ###

在捕获异常时，尽可能写出明确的异常，而不是使用空的'except:'子句;

对所有try/except子句，把'try'子句限制在有需要的绝对最少量代码；

### 8.其他 ###

某种程度上，代码不应该不利于其他Python实现（PyPy, Jython, IronPython,Pyrex, Psyco,等等)；

例如，对a+=b or a=a+b形式的语句，不要依赖CPython对就地（in-place)字符串连接的高效实现。那些语句在Jython中运行很慢。对库的性能敏感部分，应该改用 ''.join()语句。这将保证对不同的实现，字符串连接表现为线性时间。

与None之类的单件比较，应该总是用'is' or 'is not’，绝不要用等号操作符；

例如，当你本意是"if x is not None"时，对写成"if x"要小心–例如，当测试一个默 认为None的变量或参数是否被设置为其他值时,这个其他值可能是一种在布尔上下 文中为假的类型（例如容器)。